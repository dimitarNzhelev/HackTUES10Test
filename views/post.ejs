<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <% if(typeof post != "undefined" && typeof user != "undefined") { %>
    <title><%= post.caption%></title>
    <% } %>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .content {
            margin: 2em;
        }
        .post-image {
            width: 100%;
            max-width: 300px;
            height: auto;
        }
        .comment {
            background-color: lightgrey;
            margin: 1em 0;
            padding: 1em;
            border-radius: 10px;
        }
        .comment-button {
            background-color: #007BFF;
            color: #fff;
            border: none;
            padding: 10px;
            border-radius: 5px;
            text-align: center;
            justify-content: center;
            cursor: pointer;
        }
        .comment-button:hover {
            background-color: #0056b3;
        }

    </style>

    <script>
        async function deleteCommentById(id, postId) {
            fetch("/dashboard/posts/" + postId + "/comments/" + id, {
                method: "DELETE"
            }).then(response => {
                if(response.ok){
                    const count = document.getElementById('totalcomments');
                    const updatedCount = parseInt(count.textContent.split(' ')[2]) - 1;
                    count.textContent = `Total comments: ${updatedCount}`;
                    window.location.reload();
                } else {
                    console.error("Failed to delete comment");
                }
            })
        }

        function editComment(commentId, postid) {
            const commentElement = document.getElementById(`comment_${commentId}`);
            const commentText = commentElement.textContent;
            commentElement.innerHTML = `<input type="text" id="input_${commentId}" value="${commentText}" />`;
            const inputElement = document.getElementById(`input_${commentId}`);
            inputElement.focus();

            inputElement.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    updateComment(commentId, postid);
                }
            });
        }

        function updateComment(commentId, postId) {
            const inputElement = document.getElementById(`input_${commentId}`);
            const updatedText = inputElement.value;
            const commentElement = document.getElementById(`comment_${commentId}`);
            commentElement.innerHTML = updatedText;
            fetch(`/dashboard/posts/${postId}/comments/${commentId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ commentText: updatedText })
            })
            .then(response => response.json())
            .then(data => {
                if(data.success) {
                    console.log("Comment updated successfully");
                } else {
                    console.error(data);
                    console.error("Failed to update comment", data.error);
                }
            })
            .catch(error => console.error("Error:", error));
}

        function addComment(postId, userId, username) {
            const newCommentInput = document.createElement('input');
            newCommentInput.type = 'text';
            newCommentInput.id = 'new_comment_input';
            newCommentInput.placeholder = 'Write your comment here';
            
            // Append the new comment input to the "content" div
            const contentDiv = document.querySelector('.content');
            contentDiv.appendChild(newCommentInput);

            newCommentInput.focus();

            newCommentInput.addEventListener('keypress', function(event) {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    const newCommentText = newCommentInput.value;
                    fetch(`/dashboard/posts/${postId}/comments`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ commentText: newCommentText, userId: userId, postId, postId })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if(data.success) {
                            const newCommentDiv = document.createElement('div');
                            newCommentDiv.className = 'comment';
                            newCommentDiv.innerHTML = `
                                <h1>Comment</h1>
                                <p id="comment_${data.commentId}">${newCommentText}</p>
                                <p>Posted by: ${username}</p>
                                <button class="comment-button" onclick="editComment('${data.commentId}', '${postId}')">Update</button>
                                <button class="comment-button" onclick="deleteCommentById('${data.commentId}', '${postId}')">Delete</button>
                            `;

                            console.log(data);

                            contentDiv.replaceChild(newCommentDiv, newCommentInput);

                            const count = document.getElementById('totalcomments');
                            const updatedCount = parseInt(count.textContent.split(' ')[2]) + 1;
                            count.textContent = `Total comments: ${updatedCount}`;
                        } else {
                            console.error("Failed to add comment", data.error);
                        }
                    })
                    .catch(error => console.error("Error:", error));
                }
            });
        }   
    
        async function likePost(id) {
            const heartIcon = document.getElementById(`heart-icon`);

            fetch(`/dashboard/myposts/${id}/like`, {
                method: 'POST'
            })
            .then(async response => {
                if (response.ok) {
                    const totalLikes = document.getElementById(`total-likes`);

                    const newLikes = await getTotalLikes(id);
                    console.log("TOTAL LIKES: ", newLikes);
                    totalLikes.textContent = `Total likes: ${newLikes}`;

                    const likeStatus = await isLiked(id);
                    console.log("LIKE STATUS: ", likeStatus)

                    const heartIcon = document.getElementById(`heart-icon`);
                    if(likeStatus){
                        heartIcon.classList.remove('far', 'fa-heart');
                        heartIcon.classList.add('fas', 'fa-heart');
                        console.log("add fill");
                    }else{
                        console.log("remove fill");
                        heartIcon.classList.remove('fas', 'fa-heart');
                        heartIcon.classList.add('far', 'fa-heart');
                    }
                } else {
                    console.error('Failed to like post');
                }
            })
            .catch(error => {
                console.error('Failed to like post:', error);
            });
        }


        async function isLiked(id) {
            try {
                const response = await fetch(`/dashboard/posts/${id}/likeStatus`, {
                method: 'GET'
                });

                if (response.ok) {
                const data = await response.json();
                const likeStatus = data.likeStatus;
                console.log(likeStatus);
               return likeStatus;
                } else {
                throw new Error('Failed to fetch like status');
                }
            } catch (error) {
                console.error('Error:', error);
            }
            }

        async function getTotalLikes(id){
            try {
                const response = await fetch(`/dashboard/posts/${id}/totalLikes`, {
                method: 'GET'
                });

                if (response.ok) {
                const data = await response.json();
                const totalLikes = data.totalLikes;
                console.log(totalLikes);
               return totalLikes;
                } else {
                throw new Error('Failed to fetch total likes');
                }
            } catch (error) {
                console.error('Error:', error);
            }
            }
     
    </script>
</head>
<body>

    <% if(typeof post != "undefined" && typeof user != "undefined") { %>
    <div class="content">
        <h1><%= post.caption%></h1>
        <p><%= post.description%></p>
        <% console.log(post.totallikes) %>
        <p id="total-likes">Total likes: <%= post.totallikes %></p>
        <p id="totalcomments">Total comments: <%= post.totalcomments %></p>
        <button id="like-button" class="like-button" onclick="likePost('<%= post.id %>')">
            <i id="heart-icon" class="far fa-heart"></i>
        </button>

        <script>
            const heartIcon = document.getElementById(`heart-icon`);
            
            async function checkLikeStatus() {
                const likeStatus = await isLiked('<%= post.id %>');
                console.log("LIKE STATUS: ", likeStatus)
        
                if(likeStatus){
                    heartIcon.classList.remove('far', 'fa-heart');
                    heartIcon.classList.add('fas', 'fa-heart');
                    console.log("add fill");
                }else{
                    console.log("remove fill");
                    heartIcon.classList.remove('fas', 'fa-heart');
                    heartIcon.classList.add('far', 'fa-heart');
                }
            }
        
            checkLikeStatus();
        </script>
        
    
          
        <p>Posted by: <%= user.name %></p>
        <img class="post-image" src="<%= post.imageUrl %>" />
        <a href="dashboard/posts">Back to dashboard</a>
        <button class="comment-button" onclick="addComment('<%= post.id %>', '<%= user.id %>', '<%= user.name %>')" >Add comment</button>

        <% if(comments && comments.length > 0) { %>
            <% comments.forEach((comment) => { %>
            <div class="comment">
                <h1>Comment</h1>
                <p id="comment_<%= comment.id %>"><%= comment.comment_text %></p>
                <p>Posted by: <%= comment.username %></p>
                <% if (comment.user_id == user.id){ %>
                    <button class="comment-button" onclick="editComment('<%= comment.id %>', '<%= post.id %>')">Update</button>
                    <button class="comment-button" onclick="deleteCommentById('<%= comment.id %>', '<%= post.id %>')">Delete</button>
                <%} %>
            </div>
            <% }); %>
        <% } %>
    </div>
    <% } %>

</body>
</html>
